@model ProjetoDDD.MVC.ViewModels.ColaboradorViewModel

@{
    ViewBag.Title = "Sistema de Vendas - Edição do Colaborador";
    Layout = null;
}

<h2>Edit</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EditProvider" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ColaboradorViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ColaboradorId)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Idade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Idade, new { htmlAttributes = new { @class = "form-control age" } })
                @Html.ValidationMessageFor(model => model.Idade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apelido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Sexo, new List<SelectListItem>
                   { new SelectListItem{Text="Masculino", Value="M"},
                     new SelectListItem{Text="Feminino", Value="F"}},
                     "Selecione...", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="buttons-modal">
            <a href="#myModal" data-dismiss="modal"><img src="~/img/button/back.svg" class="icon" /></a>
            <input id="btnSubmit" type="image" src="~/img/button/save.svg" class="icon" />
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse('#EditProvider');
        $("#btnSubmit").click(function () {
            if (!$("#EditProvider").valid()) {
                return false;
            }
        });
    });
</script>

@Scripts.Render("~/bundles/mask")